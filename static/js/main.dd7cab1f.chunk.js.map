{"version":3,"sources":["App.tsx","index.tsx"],"names":["require","makeStyles","column","flex","inputSpacing","height","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAUeA,EAAQ,IAkCLC,YAAW,CAC3BC,OAAQ,CACNC,KAAM,GAERC,aAAc,CACZC,OAAQ,UA+FGC,MA3Ff,WACE,OAAO,uCChDTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dd7cab1f.chunk.js","sourcesContent":["import {\n  Card,\n  Container,\n  Divider,\n  Grid,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { Dispatch, SetStateAction, useEffect, useState } from \"react\";\nimport \"./App.css\";\nconst format = require(\"xml-formatter\");\n\nconst defaultDocument = `<?xml version=\"1.0\"?>\n<?xml-stylesheet type=\"text/xsl\" href=\"example.xsl\"?>\n<Article>\n  <Title>My Article</Title>\n  <Authors>\n    <Author>Mr. Foo</Author>\n    <Author>Mr. Bar</Author>\n  </Authors>\n  <Body>This is my article text.</Body>\n</Article>`;\n\nconst defaultTransform = `<?xml version=\"1.0\"?>\n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n\n  <xsl:output method=\"text\"/>\n\n  <xsl:template match=\"/\">\n    Article - <xsl:value-of select=\"/Article/Title\"/>\n    Authors: <xsl:apply-templates select=\"/Article/Authors/Author\"/>\n  </xsl:template>\n\n  <xsl:template match=\"Author\">\n    - <xsl:value-of select=\".\" />\n  </xsl:template>\n\n</xsl:stylesheet>`;\n\n//styled component Li\n// const ColGrid = styled.Grid`\n//   height: \"100vh\";\n// `;\n\nconst useStyles = makeStyles({\n  column: {\n    flex: 1,\n  },\n  inputSpacing: {\n    height: \"22px\",\n  },\n});\n\nfunction App() {\n  return <div>dog</div>;\n  const applyTransform = (document: string, transform: string) => {\n    const parser = new DOMParser();\n    const xsltProcessor = new XSLTProcessor();\n    const documentSource = parser.parseFromString(\n      document as string,\n      \"text/xml\"\n    );\n    const transformSource = parser.parseFromString(\n      transform as string,\n      \"text/xml\"\n    );\n    xsltProcessor.importStylesheet(transformSource);\n    const resultDocument = xsltProcessor.transformToDocument(documentSource);\n\n    // Obtain result as a string\n    const serializer = new XMLSerializer();\n    return serializer.serializeToString(resultDocument.documentElement);\n  };\n\n  const [document, setDocument] = useState(format(defaultDocument as string));\n  const [transform, setTransform] = useState(defaultTransform);\n\n  const [transformed, setTransformed] = useState(\n    applyTransform(document, transform)\n  );\n\n  useEffect(() => {\n    setTransformed(applyTransform(document, transform));\n  }, [document, transform]);\n\n  const handleReadingFile = (\n    e: any,\n    stateUpdate: Dispatch<SetStateAction<string>>\n  ) => {\n    const file: File = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const formattedXml = format(e.target?.result as string);\n      stateUpdate(formattedXml);\n    };\n    reader.readAsText(file);\n  };\n\n  const style = useStyles();\n  return (\n    <Grid container direction=\"row\" spacing={2}>\n      <Grid item container style={{ height: \"100vh\" }} xs={4}>\n        <Card className={style.column}>\n          <Typography variant=\"h3\">XML Document</Typography>\n          <Divider />\n          <input\n            type=\"file\"\n            id=\"document-input\"\n            onInput={(e) => {\n              handleReadingFile(e, setDocument);\n            }}\n          />\n          <Divider />\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{document}</div>\n        </Card>\n      </Grid>\n\n      <Grid item container style={{ height: \"100vh\" }} xs={4}>\n        <Card className={style.column}>\n          <Typography variant=\"h3\">XSLT Transform</Typography>\n          <Divider />\n          <input\n            type=\"file\"\n            id=\"transform-input\"\n            onInput={(e) => {\n              handleReadingFile(e, setTransform);\n            }}\n          />\n          <Divider />\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{transform}</div>\n        </Card>\n      </Grid>\n      <Grid item container style={{ height: \"100vh\" }} xs={4}>\n        <Card className={style.column}>\n          <Typography variant=\"h3\">Transformation</Typography>\n          <Divider />\n          <div className={style.inputSpacing} />\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{transformed}</div>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}